# API service auth
API_KEY=change-me

# OpenRouter (required for model listing and default routing)
OPENROUTER_API_KEY=

# Groq (optional; enables Groq fallback)
GROQ_API_KEY=
GROQ_MODEL_NAME=llama3-70b-8192

# Google AI Studio (optional; enables Gemini direct validation)
GOOGLE_AI_STUDIO_API_KEY=

# Langfuse (observability)
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
LANGFUSE_HOST=http://langfuse:3000

# Database
DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgres:5432/app

# CORS
CORS_ALLOW_ORIGINS=

# ===============================================================================
# AI Gateway Project – Environment Configuration
# ===============================================================================
# Copy this file to .env and fill in your actual values
# Generate secrets with: openssl rand -hex 32
# ===============================================================================

# ---- Application Database ----
DATABASE_URL=postgresql://user:password@localhost:5432/chatbot_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=app

# ---- LLM Provider Configuration ----
# OpenRouter API key for Gemini models
OPENROUTER_API_KEY=your_openrouter_api_key

# Groq API key for Llama models (with rate limiting and automatic fallback)
GROQ_API_KEY=your_groq_api_key_here

# Default LLM model to use
LLM_MODEL_NAME=google/gemini-1.5-pro-latest

# ---- Optional LLM Provider Keys ----
# OPENAI_API_KEY=your_openai_api_key_here     # For ChatGPT models
# GROQ_TIMEOUT_SECONDS=30                     # Custom Groq timeout (default: 30s)

# ---- Security ----
API_KEY=your_api_key_for_chat_endpoint
ADMIN_API_KEY=your_admin_api_key

# ===============================================================================
# LANGFUSE v3 CONFIGURATION (CRITICAL - ALL REQUIRED)
# ===============================================================================

# ---- Core Langfuse Configuration ----
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=                    # REQUIRED: Generate with: openssl rand -hex 32
SALT=                              # REQUIRED: Generate with: openssl rand -hex 32  
ENCRYPTION_KEY=                    # REQUIRED: Generate with: openssl rand -hex 32

# ---- Langfuse Database ----
LANGFUSE_DATABASE_URL=postgresql://postgres:postgres@postgres:5432/langfuse

# ---- ClickHouse Configuration (Required for Langfuse v3) ----
CLICKHOUSE_URL=http://clickhouse:8123
CLICKHOUSE_MIGRATION_URL=clickhouse://clickhouse:9000
CLICKHOUSE_USER=langfuse
CLICKHOUSE_PASSWORD=               # REQUIRED: Generate with: openssl rand -hex 32
CLICKHOUSE_DB=langfuse
CLICKHOUSE_CLUSTER_ENABLED=false

# ---- Redis Configuration (Used for rate limiting and caching) ----
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_AUTH=myredissecret          # CHANGEME: Set a strong password
REDIS_TLS_ENABLED=false
REDIS_MAXMEMORY=400mb             # Redis maximum memory limit for LRU eviction

# ---- Cache Configuration ----
CACHE_TTL_SECONDS=3600           # Cache TTL for chat responses (1 hour)
CACHE_MAX_SIZE=1000              # Max entries for in-memory cache fallback
CACHE_ENABLED=true               # Enable/disable caching globally

# ---- MinIO/S3 Storage Configuration (REQUIRED for Langfuse v3) ----
MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=miniosecret   # CHANGEME: Set a strong password

# S3 Event Upload (MANDATORY - Langfuse will crash without these)
LANGFUSE_S3_EVENT_UPLOAD_BUCKET=langfuse
LANGFUSE_S3_EVENT_UPLOAD_REGION=auto
LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID=minio
LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY=miniosecret  # Same as MINIO_ROOT_PASSWORD
LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT=http://minio:9000
LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE=true
LANGFUSE_S3_EVENT_UPLOAD_PREFIX=events/

# S3 Media Upload (Optional)
LANGFUSE_S3_MEDIA_UPLOAD_BUCKET=langfuse
LANGFUSE_S3_MEDIA_UPLOAD_REGION=auto
LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID=minio
LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY=miniosecret
LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT=http://localhost:9090
LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE=true
LANGFUSE_S3_MEDIA_UPLOAD_PREFIX=media/

# S3 Batch Export (Optional)
LANGFUSE_S3_BATCH_EXPORT_ENABLED=false
LANGFUSE_S3_BATCH_EXPORT_BUCKET=langfuse
LANGFUSE_S3_BATCH_EXPORT_PREFIX=exports/
LANGFUSE_S3_BATCH_EXPORT_REGION=auto
LANGFUSE_S3_BATCH_EXPORT_ENDPOINT=http://minio:9000
LANGFUSE_S3_BATCH_EXPORT_EXTERNAL_ENDPOINT=http://localhost:9090
LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID=minio
LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY=miniosecret
LANGFUSE_S3_BATCH_EXPORT_FORCE_PATH_STYLE=true

# ---- Bootstrap Configuration (Auto-creates org/project/user) ----
LANGFUSE_INIT_ORG_ID=hurriyet-partisi
LANGFUSE_INIT_PROJECT_ID=ai-gatewayå
LANGFUSE_INIT_PROJECT_PUBLIC_KEY=lf_pk_local
LANGFUSE_INIT_PROJECT_SECRET_KEY=lf_sk_local
LANGFUSE_INIT_USER_EMAIL=ai@gencturkler.co
LANGFUSE_INIT_USER_PASSWORD=gencturk123

# ---- Langfuse Observability (Auto-generated from bootstrap above) ----
LANGFUSE_PUBLIC_KEY=lf_pk_local    # Use bootstrap key or get from UI
LANGFUSE_SECRET_KEY=lf_sk_local    # Use bootstrap key or get from UI
LANGFUSE_HOST=http://langfuse:3000

# ---- Optional Langfuse Settings ----
TELEMETRY_ENABLED=false
LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=true
LANGFUSE_INGESTION_QUEUE_DELAY_MS=
LANGFUSE_INGESTION_CLICKHOUSE_WRITE_INTERVAL_MS=

# ---- CORS Configuration ----
# Comma-separated list of allowed origins (leave empty for wildcard in DEBUG mode)
CORS_ALLOW_ORIGINS=
# Example for production:
# CORS_ALLOW_ORIGINS=https://yoursite.com,https://app.yoursite.com,http://localhost:8501

# HTTP methods allowed in CORS requests
CORS_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Headers allowed in CORS requests
CORS_ALLOW_HEADERS=Authorization,Content-Type,X-API-Key,X-Request-ID

# Allow credentials (cookies, auth headers) in CORS requests
CORS_ALLOW_CREDENTIALS=false

# Pre-flight cache duration in seconds
CORS_MAX_AGE=600

# ---- Optional Application Settings ----
DEBUG=True
ENVIRONMENT=development
LOG_LEVEL=INFO 