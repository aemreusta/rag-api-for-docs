{
  "info": {
    "name": "Chatbot API Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "d3f5e06d-5f6d-4a0a-9a3c-1b2c3d4e5f6a"
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "health"
          ]
        }
      }
    },
    {
      "name": "Rate Limit Status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/rate-limit/status",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "v1",
            "rate-limit",
            "status"
          ]
        }
      }
    },
    {
      "name": "Providers",
      "item": [
        {
          "name": "Validate Provider Key (Server Config)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/providers/validate?provider={{provider}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "providers",
                "validate"
              ],
              "query": [
                {
                  "key": "provider",
                  "value": "{{provider}}"
                }
              ]
            }
          }
        },
        {
          "name": "Validate Provider Key (Override)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/providers/validate?provider={{provider}}&api_key={{override_api_key}}",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "providers",
                "validate"
              ],
              "query": [
                { "key": "provider", "value": "{{provider}}" },
                { "key": "api_key", "value": "{{override_api_key}}" }
              ]
            }
          }
        },
        {
          "name": "List Models",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/models?provider={{provider}}&only_gemini=true",
              "host": [
                "{{base_url}}"
              ],
              "path": [
                "api",
                "v1",
                "models"
              ],
              "query": [
                { "key": "provider", "value": "{{provider}}" },
                { "key": "only_gemini", "value": "true" }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Ingestion",
      "item": [
        {
          "name": "Upload Document",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "file", "type": "file", "src": "{{upload_file_path}}" }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/v1/docs/upload",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "upload"]
            }
          }
        },
        {
          "name": "List Documents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/docs",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs"]
            }
          }
        },
        {
          "name": "Get Document",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/docs/{{doc_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "{{doc_id}}"]
            }
          }
        },
        {
          "name": "Get Document Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/docs/status/{{doc_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "status", "{{doc_id}}"]
            }
          }
        },
        {
          "name": "Detect Changes",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"document_id\": \"{{doc_id}}\",\n  \"new_content_hash\": \"{{new_content_hash}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/docs/detect-changes",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "detect-changes"]
            }
          }
        },
        {
          "name": "Apply Changes",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"document_id\": \"{{doc_id}}\",\n  \"changes\": {\n    \"is_new_version\": true,\n    \"changed_pages\": [1]\n  },\n  \"new_content_hash\": \"{{new_content_hash}}\",\n  \"page_texts\": {\n    \"pages\": {\n      \"1\": \"Updated text for page 1\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/docs/apply-changes",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "apply-changes"]
            }
          }
        },
        {
          "name": "Job Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/v1/docs/jobs/{{job_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "docs", "jobs", "{{job_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Chat",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "X-API-Key",
            "value": "{{api_key}}",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"question\": \"{{question}}\",\n  \"session_id\": \"{{session_id}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/chat",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "api",
            "v1",
            "chat"
          ]
        }
      }
    },
    {
      "name": "Chat (RAG_EMPTY negative case)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"question\": \"qwertyuiopasdfghjkzxcvbnm 1234567890 â€” unlikely to match docs\",\n  \"session_id\": \"{{session_id}}\",\n  \"stream\": false\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/chat",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "chat"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test('Expect 200 or 502 with RAG_EMPTY', function () {",
              "  const sc = pm.response.code;",
              "  pm.expect([200, 502]).to.include(sc);",
              "  if (sc === 502) {",
              "    const body = pm.response.json();",
              "    pm.expect(body.code).to.eql('RAG_EMPTY');",
              "  }",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Chat (Streaming)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "X-API-Key", "value": "{{api_key}}", "disabled": true }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"question\": \"{{question}}\",\n  \"session_id\": \"{{session_id}}\",\n  \"stream\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/chat",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "chat"]
        }
      }
    },
    {
      "name": "Chat (With Model)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "X-API-Key", "value": "{{api_key}}", "disabled": true }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"question\": \"{{question}}\",\n  \"session_id\": \"{{session_id}}\",\n  \"model\": \"{{model}}\",\n  \"stream\": {{stream}}\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/chat",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "chat"]
        }
      }
    },
    {
      "name": "Metrics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/metrics",
          "host": ["{{base_url}}"],
          "path": ["metrics"]
        }
      }
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// If session_id is empty, initialize it to a UUID",
          "if (!pm.environment.get('session_id')) { pm.environment.set('session_id', pm.variables.replaceIn('{{$randomUUID}}')); }",
          "// Default question if not set",
          "if (!pm.environment.get('question')) { pm.environment.set('question', 'Selam! Parti politikalarÄ± hakkÄ±nda bana bir ÅŸey sor.'); }"
        ]
      }
    }
  ]
}


