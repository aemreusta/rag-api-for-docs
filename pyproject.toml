[project]
name = "chatbot-api-service"
version = "0.1.0"
description = "A production-ready, observable RAG API built with FastAPI and LlamaIndex to answer questions about charity policies from PDF documents. Features full observability with Langfuse, session-based rate limiting, and a secure admin panel."
authors = [
    { name = "Ahmet Emre Usta", email = "a.emreusta@hotmail.com" }
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
dependencies = [
    "fastapi",
    "uvicorn",
    "httpx",
    "python-dotenv",
    "langfuse",
    "llama-index",
    "llama-index-llms-openrouter",
    "llama-index-vector-stores-postgres",
    "llama-index-embeddings-huggingface",
    "pydantic-settings",
    "psycopg2-binary",
    "pgvector",
    "pydantic==2.5.2",
    "structlog",
    "beautifulsoup4",
    "html2text",
    "unstructured",
    "reportlab",
    "alembic",
    "redis",
    "groq",
]
keywords = [
    "python", "nlp", "api", "docker", "chatbot", "postgresql", "charity", "non-profit", "observability", "rag", "fastapi", "llm", "generative-ai", "llmops", "llama-index", "pgvector", "langfuse"
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto" 

[tool.commitizen]
name = "cz_conventional_commits"
version_provider = "pep621"
tag_format = "v$version"
version_scheme = "semver"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[tool.pytest.ini_options]
markers = [
  "integration: marks tests as integration tests that may require external services (deselect with '-m \"not integration\"')",
]

[build-system]
requires = ["setuptools>=67", "wheel"]
build-backend = "setuptools.build_meta"